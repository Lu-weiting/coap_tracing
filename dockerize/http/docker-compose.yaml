version: '3.8'

services:
  http-gateway:
    build: ./gateway
    container_name: http-gateway
    cap_add:
      - NET_ADMIN  # 需要網路管理權限 方便設定 TBF
    privileged: true
    networks:
      http-iot-network:
        ipv4_address: 172.40.0.2
      http-client-network:
    ports:
      - "4000:4000"  # 映射 HTTP port (client -> Gateway)
      - "4001:4001"  # 映射 Span Collector port
    environment:
      - SPAN_HANDLER_HOST=host.docker.internal
      - SPAN_HANDLER_PORT=4444
      - IOT_SERVER_A_PORT=4002
      - IOT_SERVER_A_HOST=http-iot-device-a
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000"]
      interval: 5s
      timeout: 2s
      retries: 3
      start_period: 10s


  http-iot-device-a:
    build: ./iotDevice
    container_name: http-iot-device-a
    cap_add:
      - ALL
    privileged: true
    networks:
      http-iot-network:
         ipv4_address: 172.40.0.10
    environment:
      - IOT_SERVER_A_PORT=4002
      - GATEWAY_PORT=4001
      - GATEWAY_HOST=http-gateway

  http-client:
    build: ./httpClient
    container_name: http-client
    networks:
      http-client-network:
    depends_on:
      http-gateway:
        condition: service_healthy
    environment:
      - GATEWAY_HOST=http-gateway
      - GATEWAY_PORT=4000
      - SPAN_HANDLER_HOST=host.docker.internal
      - SPAN_HANDLER_PORT=4444
    extra_hosts:
      - "host.docker.internal:host-gateway"
      

  http-span-handler:
    build: ./spanHandler
    container_name: http-span-handler
    networks:
      http-tracing-network:
    environment:
      - SPAN_HANDLER_PORT=4444
    ports:
      - "4444:4444"
    volumes:
      - http-span-data:/app

networks:
  http-iot-network:
    driver: bridge
    internal: true
    ipam:
      config:
        - subnet: 172.40.0.0/24
  http-client-network:
    driver: bridge
  http-tracing-network:
    driver: bridge

volumes:
  http-span-data:
